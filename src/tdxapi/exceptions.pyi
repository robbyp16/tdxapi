from _typeshed import Incomplete
from typing import Any

class ObjectNotFoundException(Exception): ...
class NotAuthorizedException(Exception): ...
class RequestFailedException(Exception): ...
class NoDefaultAppException(Exception): ...
class InvalidHTTPMethodException(Exception): ...
class NoSuchAttributeException(Exception): ...
class PropertyNotSetException(Exception): ...
class InvalidParameterException(Exception): ...

class PersonDoesNotExistException(Exception):
    criteria: Incomplete
    message: Incomplete
    def __init__(self, criteria: dict[str, Any], message: str = ...) -> None: ...

class MultipleMatchesException(Exception):
    message: Incomplete
    type: Incomplete
    def __init__(self, type: str, message: str = ...) -> None: ...

class InvalidUniqnameException(Exception): ...

class TDXCommunicationException(Exception):
    message: Incomplete
    def __init__(self, message: str = ...) -> None: ...

class UnableToAttachAssetException(Exception):
    message: Incomplete
    ticket: Incomplete
    asset: Incomplete
    def __init__(self, ticket: str, asset: str, message: str = ...) -> None: ...
